---
- name: Copy application package
  copy:
      src={{ playbook_dir }}/../../shell/target/{{ df_platform_package }}
      dest={{ company_package_dir }}/{{ df_platform_package }}

- name: Remove previous application install
  file:
    path: "{{ df_platform_install_dir }}.previous"
    state: absent
  ignore_errors: True

- name: Move current application install out of the way
  command: mv {{ df_platform_install_dir }} {{ df_platform_install_dir }}.previous
  ignore_errors: True

- name: Extract application package
  command: tar xzf {{ company_package_dir }}/{{ df_platform_package }}
      chdir={{ company_install_prefix }}

- name: Create symbolic link to application install
  file:
      path={{ df_platform_home }}
      src={{ df_platform_install_dir }}
      state=link

- name: Create {{ df_platform_data_dir }} directory
  file:
    path: "{{ df_platform_data_dir }}"
    state: directory
    mode: 0755

- name: Copy scripts
  copy:
      src={{ item }}
      dest={{ df_platform_data_dir }}/{{ item }}
  with_items:
    - create-accumulo-tables

- name: List Accumulo tables
  command: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      {{ accumulo_home }}/bin/accumulo shell --user root --password {{ accumulo_password }}
      --execute-command tables
  register: list_tables

- name: Create Accumulo tables
  command: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      {{ accumulo_home }}/bin/accumulo shell --user root --password {{ accumulo_password }}
      --execute-command "execfile {{ df_platform_data_dir }}/create-accumulo-tables"
  when: "'IngestMessage' not in list_tables.stdout_lines"
