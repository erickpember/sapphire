---
- name: Start Accumulo services
  command: sudo -u hdfs nohup {{ accumulo_home }}/bin/start-here.sh
  when: inventory_hostname == 'devbox'

- name: Copy application package
  copy:
      src={{ inventory_dir }}/../../../../shell/target/{{ df_platform_package }}
      dest={{ company_prefix }}/{{ df_platform_package }}

- name: Remove previous application install
  command: rm -rf {{ df_platform_install_dir }}.previous
  ignore_errors: True

- name: Move current application install out of the way
  command: mv {{ df_platform_install_dir }} {{ df_platform_install_dir }}.previous
  ignore_errors: True

- name: Extract application package
  command: tar xzf {{ company_prefix }}/{{ df_platform_package }}
      chdir={{ company_prefix }}

- name: Create symbolic link to application install
  file:
      path={{ df_platform_home }}
      src={{ df_platform_install_dir }}
      state=link

- name: Copy configuration files
  copy:
      src={{ item }}
      dest={{ df_platform_conf_dir }}/{{ item }}
  with_items:
    - create-accumulo-tables

- name: List Accumulo tables
  shell: >
      {{ accumulo_home }}/bin/accumulo shell --user root --password {{ accumulo_password }} --execute-command tables
  register: list_tables

- name: Create Accumulo tables
  shell: >
      {{ accumulo_home }}/bin/accumulo shell --user root --password {{ accumulo_password }} --execute-command "execfile {{ df_platform_conf_dir }}/create-accumulo-tables"
  when: "'Patient' not in list_tables.stdout_lines"

- name: List Kafka topics
  command: >
      {{ kafka_home }}/bin/kafka-topics.sh --zookeeper {{ groups['zookeeper'][0] }} --list
  register: list_topics

- name: Create Kafka topic
  command: >
      {{ kafka_home }}/bin/kafka-topics.sh --zookeeper {{ groups['zookeeper'][0] }} --create --partitions 1 --replication-factor 1 --topic hl7Message
  when: "'hl7Message' not in list_topics.stdout_lines"

- name: Create Kafka topic
  command: >
      {{ kafka_home }}/bin/kafka-topics.sh --zookeeper {{ groups['zookeeper'][0] }} --create --partitions 1 --replication-factor 1 --topic event
  when: "'event' not in list_topics.stdout_lines"
