---
- name: Install Ansible
  yum:
    name: ansible
    enablerepo: epel

- name: Create {{ docker_image_creator_home }} directory
  file:
    path: "{{ docker_image_creator_home }}"
    state: directory
    mode: 0755

- name: Package Ansible scripts
  local_action: command tar czf /tmp/ansible.tar.gz ansible
      chdir={{ playbook_dir }}/..
  sudo: no

- name: Copy Ansible scripts
  copy:
    src: /tmp/ansible.tar.gz
    dest: "{{ company_package_dir }}/ansible.tar.gz"

- name: Extract Ansible scripts
  command: tar --no-same-owner -xzf {{ company_package_dir }}/ansible.tar.gz
      chdir={{ docker_image_creator_home }}

- name: Copy centos7-ansible-java Dockerfile
  template:
    src: centos7-ansible-java-Dockerfile
    dest: "{{ company_package_dir }}/centos7-ansible-java-Dockerfile"

- name: Create centos7-ansible-java base Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/centos7-ansible-java-Dockerfile
      --tag=datafascia/centos7-ansible-java
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/centos7-ansible-java.created
      creates={{ docker_image_creator_home }}/centos7-ansible-java.created

- name: Copy ZooKeeper Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/zookeeper-server/templates/zookeeper-Dockerfile"
    dest: "{{ company_package_dir }}/zookeeper-Dockerfile"

- name: Create ZooKeeper Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/zookeeper-Dockerfile
      --tag=datafascia/zookeeper
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/zookeeper.created
      creates={{ docker_image_creator_home }}/zookeeper.created

- name: Copy Accumulo master primary Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/accumulo-master-primary/templates/accumulo-master-primary-Dockerfile"
    dest: "{{ company_package_dir }}/accumulo-master-primary-Dockerfile"

- name: Create Accumulo master primary Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/accumulo-master-primary-Dockerfile
      --tag=datafascia/accumulo-master-primary
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/accumulo-master-primary.created
      creates={{ docker_image_creator_home }}/accumulo-master-primary.created

- name: Copy Accumulo master standby Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/accumulo-master-standby/templates/accumulo-master-standby-Dockerfile"
    dest: "{{ company_package_dir }}/accumulo-master-standby-Dockerfile"

- name: Create Accumulo master standby Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/accumulo-master-standby-Dockerfile
      --tag=datafascia/accumulo-master-standby
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/accumulo-master-standby.created
      creates={{ docker_image_creator_home }}/accumulo-master-standby.created

- name: Copy Accumulo slave Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/accumulo-slave/templates/accumulo-slave-Dockerfile"
    dest: "{{ company_package_dir }}/accumulo-slave-Dockerfile"

- name: Create Accumulo slave Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/accumulo-slave-Dockerfile
      --tag=datafascia/accumulo-slave
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/accumulo-slave.created
      creates={{ docker_image_creator_home }}/accumulo-slave.created

- name: Copy Kafka Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/kafka/templates/kafka-Dockerfile"
    dest: "{{ company_package_dir }}/kafka-Dockerfile"

- name: Create Kafka Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/kafka-Dockerfile
      --tag=datafascia/kafka
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/kafka.created
      creates={{ docker_image_creator_home }}/kafka.created

- name: Copy df-etl Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/df-etl/templates/df-etl-Dockerfile"
    dest: "{{ company_package_dir }}/df-etl-Dockerfile"

- name: Create df-etl Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/df-etl-Dockerfile
      --tag=datafascia/df-etl
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/df-etl.created
      creates={{ docker_image_creator_home }}/df-etl.created

- name: Copy df-api-server package
  copy:
    src: "{{ playbook_dir }}/../../api/server/target/df-api-server-{{ df_platform_version }}.jar"
    dest: "{{ company_package_dir }}/df-api-server-{{ df_platform_version }}.jar"
  register: copy_df_api_server

- name: Force creation of df-api-server Docker image
  file:
    path: "{{ docker_image_creator_home }}/df-api-server.created"
    state: absent
  when: copy_df_api_server.changed

- name: Copy df-api-server Dockerfile
  template:
    src: "{{ playbook_dir }}/roles/df-api-server/templates/df-api-server-Dockerfile"
    dest: "{{ company_package_dir }}/df-api-server-Dockerfile"

- name: Create df-api-server Docker image
  shell: >
      docker build
      --file={{ company_package_dir }}/df-api-server-Dockerfile
      --tag=datafascia/df-api-server
      {{ company_package_dir }} &&
      touch {{ docker_image_creator_home }}/df-api-server.created
      creates={{ docker_image_creator_home }}/df-api-server.created
