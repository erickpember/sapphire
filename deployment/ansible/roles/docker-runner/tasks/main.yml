---
- name: Install dnsmasq
  yum: name=dnsmasq

- name: Create {{ company_data_prefix }} directory
  file:
    path: "{{ company_data_prefix }}"
    state: directory
    mode: 0755

- name: Copy Docker run script
  template:
    src: docker-run.sh
    dest: "{{ docker_run_command }}"
    mode: 0755

- name: List Docker containers
  shell: docker ps | awk '{ print $2 }'
  register: list_containers

- name: Run ZooKeeper
  command: >
      {{ docker_run_command }}
          {{ groups['zookeeper'][0] }}
          --detach
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --env=ZOOKEEPER_SERVER_ID={{ hostvars[groups['zookeeper'][0]]['zookeeper_server_id'] }}
          --publish=2181:2181
          --publish=2888:2888
          --publish=3888:3888
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/zookeeper
  when: "'datafascia/zookeeper:latest' not in list_containers.stdout_lines"

- name: Set vm.swappiness to Accumulo recommended value
  sysctl:
    name: vm.swappiness
    value: 0

- name: Run Accumulo master primary container
  command: >
      {{ docker_run_command }}
          {{ groups['accumulo-master-primary'][0] }}
          --detach
          --env=ACCUMULO_MASTER_PRIMARY_HOST={{ groups['accumulo-master-primary'][0] }}
          --env=ACCUMULO_MASTER_STANDBY_HOST={{ groups['accumulo-master-standby'][0] }}
          --env=ACCUMULO_SLAVE_HOSTS={{ groups['accumulo-slave'] | join(',') }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --hostname={{ groups['accumulo-master-primary'][0] }}
          --publish=4560:4560
          --publish=8020:8020
          --publish=9999:9999
          --publish=50070:50070
          --publish=50095:50095
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/accumulo-master-primary
  when: "'datafascia/accumulo-master-primary:latest' not in list_containers.stdout_lines"

- name: Run Accumulo master standby container
  command: >
      {{ docker_run_command }}
          {{ groups['accumulo-master-standby'][0] }}
          --detach
          --env=ACCUMULO_MASTER_PRIMARY_HOST={{ groups['accumulo-master-primary'][0] }}
          --env=ACCUMULO_MASTER_STANDBY_HOST={{ groups['accumulo-master-standby'][0] }}
          --env=ACCUMULO_SLAVE_HOSTS={{ groups['accumulo-slave'] | join(',') }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --hostname={{ groups['accumulo-master-standby'][0] }}
          --publish=12234:12234
          --publish=50090:50090
          --publish=50091:50091
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/accumulo-master-standby
  when: "'datafascia/accumulo-master-standby:latest' not in list_containers.stdout_lines"

- name: Run Accumulo slave container
  command: >
      {{ docker_run_command }}
          {{ groups['accumulo-slave'][0] }}
          --detach
          --env=ACCUMULO_MASTER_PRIMARY_HOST={{ groups['accumulo-master-primary'][0] }}
          --env=ACCUMULO_MASTER_STANDBY_HOST={{ groups['accumulo-master-standby'][0] }}
          --env=ACCUMULO_SLAVE_HOSTS={{ groups['accumulo-slave'] | join(',') }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --hostname={{ groups['accumulo-slave'][0] }}
          --publish=9997:9997
          --publish=50010:50010
          --publish=50020:50020
          --publish=50075:50075
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/accumulo-slave
  when: "'datafascia/accumulo-slave:latest' not in list_containers.stdout_lines"

- name: Wait for HDFS namenode to start
  command: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      ansible localhost
      --connection=local
      --module-name=wait_for
      --args="host={{ groups['accumulo-master-primary'][0] }} port=8020 timeout=30"
  when: "'datafascia/accumulo-master-primary:latest' not in list_containers.stdout_lines"

- name: Wait for HDFS to become available
  command: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      su hdfs -c "hdfs dfsadmin -safemode wait"
  when: "'datafascia/accumulo-master-primary:latest' not in list_containers.stdout_lines"

- name: Initialize Accumulo instance
  shell: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      su hdfs -c "{{ accumulo_home }}/bin/accumulo init --clear-instance-name --instance-name {{ accumulo_instance }} --password {{ accumulo_password }}" &&
      touch {{ accumulo_data_prefix }}/instance.initialized
      creates={{ accumulo_data_prefix }}/instance.initialized

- name: Start Accumulo master primary
  command: >
      docker exec {{ groups['accumulo-master-primary'][0] }}
      su hdfs -c "{{ accumulo_home }}/bin/start-here.sh"

- name: Start Accumulo master standby
  command: >
      docker exec {{ groups['accumulo-master-standby'][0] }}
      su hdfs -c "{{ accumulo_home }}/bin/start-here.sh"

- name: Start Accumulo slave
  command: >
      docker exec {{ groups['accumulo-slave'][0] }}
      su hdfs -c "{{ accumulo_home }}/bin/start-here.sh"

- name: Run Kafka
  command: >
      {{ docker_run_command }}
          {{ groups['kafka'][0] }}
          --detach
          --env=KAFKA_ADVERTISED_HOST={{ groups['kafka'][0] }}
          --env=KAFKA_BROKER_ID={{ hostvars[groups['kafka'][0]]['kafka_broker_id'] }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --publish=9092:9092
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/kafka
  when: "'datafascia/kafka:latest' not in list_containers.stdout_lines"

- name: Run Storm nimbus
  command: >
      {{ docker_run_command }}
          {{ groups['storm-nimbus'][0] }}
          --detach
          --env=STORM_NIMBUS_HOST={{ groups['storm-nimbus'][0] }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --publish=6627:6627
          --publish=8080:8080
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/storm-nimbus
  when: "'datafascia/storm-nimbus:latest' not in list_containers.stdout_lines"

- name: Run Storm supervisor
  command: >
      {{ docker_run_command }}
          {{ groups['storm-supervisor'][0] }}
          --detach
          --env=STORM_NIMBUS_HOST={{ groups['storm-nimbus'][0] }}
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/storm-supervisor
  when: "'datafascia/storm-supervisor:latest' not in list_containers.stdout_lines"

- name: Run df-etl-hl7-ingest MLLP server
  command: >
      {{ docker_run_command }}
          ingest1.local.datafascia.com
          --detach
          --env=KAFKA_BROKERS={{ groups['kafka'][0] }}:9092
          --publish=9520:9520
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/df-etl-hl7-ingest
  when: "'datafascia/df-etl-hl7-ingest:latest' not in list_containers.stdout_lines"

- name: Stop df-api-server
  shell: docker stop api1.local.datafascia.com && docker rm api1.local.datafascia.com
  ignore_errors: True
  when: copy_df_api_server.changed

- name: Run df-api-server
  command: >
      {{ docker_run_command }}
          api1.local.datafascia.com
          --detach
          --env=ZOOKEEPER_SERVERS={{ groups['zookeeper'] | join(',') }}
          --publish=8081:8081
          --publish=9090:9090
          --volume={{ company_data_prefix }}:{{ company_data_prefix }}
          datafascia/df-api-server
  when: copy_df_api_server.changed
